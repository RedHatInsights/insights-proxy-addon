apiVersion: apps/v1
kind: Deployment
metadata:
  name: insights-proxy
  labels:
    app: insights-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: insights-proxy
  template:
    metadata:
      labels:
        app: insights-proxy
    spec:
      initContainers:
        - name: copy-nginx-data
          # Due to the way the image is built and Openshift permissions,
          # the /opt/app-root/nginx/etc/nginx is not writable so we need to mount
          # an empty path. However, that deletes all the files there, so we need
          # to first copy them to the empty volume.
          # This is because the image uses an nginx user (1001) to own the files
          image: registry.redhat.io/insights-proxy/insights-proxy-container-rhel9:1.5.3
          command:
            - /bin/sh
            - -c
            - >
              cp -r /opt/app-root/nginx/* /nginx-data/
          volumeMounts:
            - name: nginx-data
              mountPath: /nginx-data
      containers:
        - name: insights-proxy
          image: registry.redhat.io/insights-proxy/insights-proxy-container-rhel9:1.5.3
          volumeMounts:
            - mountPath: /opt/app-root/certs
              name: certs
            - mountPath: /opt/app-root/nginx
              name: nginx-data
            - name: rhproxy-env
              mountPath: /opt/app-root/rhproxy-env/
          env:
            - name: RHPROXY_SERVICE_PORT
              value: "3128"
      volumes:
        - name: certs
          emptyDir: {}
        - name: nginx-data
          emptyDir: {}
        - name: rhproxy-env
          configMap:
            name: rhproxy-env
            items:
            - key: redhat.servers
              path: redhat.servers
---
apiVersion: v1
kind: Service
metadata:
  name: insights-proxy-service
  labels:
    app: insights-proxy
spec:
  selector:
    app: insights-proxy
  ports:
    - name: rhproxy-service
      protocol: TCP
      port: 443
      targetPort: 3128
    # - name: rhproxy-web-server
    #   protocol: TCP
    #   port: 8443
    #   targetPort: 8443
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: insights-proxy
  name: insights-proxy-service
spec:
  port:
    targetPort: rhproxy-service
  to:
    kind: Service
    name: insights-proxy-service
    weight: 100
  wildcardPolicy: None
---
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: rhproxy-env
  data:
    redhat.servers: |
      # my custom servers
      api.openshift.com

      # RedHat Insights Servers
      api.access.redhat.com
      cert-api.access.redhat.com

      console.redhat.com
      cert.console.redhat.com

      cloud.redhat.com
      cert.cloud.redhat.com
      connect.cloud.redhat.com

      subscription.rhsm.redhat.com
      sso.redhat.com

      # Dnf/Yum RedHat Servers
      cdn.redhat.com
      mirrors.fedoraproject.org
      mirrormanager.fedoraproject.org
      codecs.fedoraproject.org


curl --proxy http://insights-proxy-service.insights-proxy.svc:443 https://console.redhat.com/api/insights-results-aggregator/v2/info